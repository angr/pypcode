name: Build

on: [push, pull_request]

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Build sdist
        run: python setup.py sdist
      - uses: actions/upload-artifact@v2
        with:
          name: source
          path: dist/*.tar.gz

  build_wheels:
    needs: build_sdist
    name: Build wheel ${{ matrix.wheel }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { os: macos-latest,   wheel: cp38-macosx_x86_64 }
          - { os: macos-latest,   wheel: cp38-macosx_arm64 }
          - { os: windows-latest, wheel: cp38-win_amd64 }
          - { os: ubuntu-latest,  wheel: cp38-manylinux_x86_64 }

          - { os: macos-latest,   wheel: pp38-macosx_x86_64 }
          - { os: windows-latest, wheel: pp38-win_amd64 }
          - { os: ubuntu-latest,  wheel: pp38-manylinux_x86_64 }

          - { os: macos-latest,   wheel: cp39-macosx_x86_64 }
          - { os: macos-latest,   wheel: cp39-macosx_arm64 }
          - { os: windows-latest, wheel: cp39-win_amd64 }
          - { os: ubuntu-latest,  wheel: cp39-manylinux_x86_64 }

          - { os: macos-latest,   wheel: pp39-macosx_x86_64 }
          - { os: windows-latest, wheel: pp39-win_amd64 }
          - { os: ubuntu-latest,  wheel: pp39-manylinux_x86_64 }

          - { os: macos-latest,   wheel: cp310-macosx_x86_64 }
          - { os: macos-latest,   wheel: cp310-macosx_arm64 }
          - { os: windows-latest, wheel: cp310-win_amd64 }
          - { os: ubuntu-latest,  wheel: cp310-manylinux_x86_64 }

    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Download source distribution
        uses: actions/download-artifact@v2
        with:
          name: source
      - name: Get package name
        run: python -c "import os, glob; open(os.environ['GITHUB_ENV'], 'w').write('PKG=' + glob.glob('pypcode-*.tar.gz')[0][0:-7] + '\n')"
      - name: Unpack source distribution
        run: tar -xf ${{ env.PKG }}.tar.gz
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.6.1
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse ${{ env.PKG }}
        env:
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_BUILD: ${{ matrix.wheel }}
          # manylinux container has an old cmake. Simply grab recent cmake from
          # pypi. Other platforms use recent cmake provided by GH actions host.
          CIBW_BEFORE_BUILD_LINUX: pip install cmake
          CIBW_TEST_COMMAND: python -m unittest discover -v -s {package}/tests
          CIBW_TEST_SKIP: '*_arm64'
          CIBW_BUILD_VERBOSITY: 1
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: source
          path: dist
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: dist
      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
