name: Build

on: [push, pull_request]

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
        with:
          python-version: '3.10'
      - run: |
          python -m pip install pylint
          python -m pip install -e .
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
        with:
          extra_args: pylint --all-files

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
        with:
          python-version: '3.10'
      - name: Build sdist
        run: |
          python -m pip install --user build
          python -m build --sdist
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: source
          path: dist/*.tar.gz

  build_wheels:
    needs: build_sdist
    name: Build wheel ${{ matrix.py }}-${{ matrix.platform.wheel_tag }} on ${{ matrix.platform.os }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        py: [cp310, cp311, cp312, cp313]
        platform:
          - { arch: x86_64,  os: windows-2019,     wheel_tag: win_amd64         }
          - { arch: x86_64,  os: macos-13,         wheel_tag: macosx_x86_64     }
          - { arch: arm64,   os: macos-latest,     wheel_tag: macosx_arm64      }
          - { arch: x86_64,  os: ubuntu-latest,    wheel_tag: manylinux_x86_64  }
          - { arch: aarch64, os: ubuntu-24.04-arm, wheel_tag: manylinux_aarch64 }
    steps:
      - name: Download source distribution
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: source
      - name: Unpack source distribution
        shell: bash
        run: tar --strip-components 1 -xvf *.tar.gz
      - name: Build wheel
        uses: pypa/cibuildwheel@d04cacbc9866d432033b1d09142936e6a0e2121a # v2.23.2
        with:
          output-dir: wheelhouse
        env:
          CIBW_ARCHS_MACOS: ${{ matrix.platform.arch }}
          CIBW_BUILD: ${{ matrix.py }}-${{ matrix.platform.wheel_tag }}
          CIBW_TEST_COMMAND: python -m unittest discover -v -s {package}/tests
          CIBW_BUILD_VERBOSITY: 1
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.platform.arch == 'arm64' && '11' || '10.14' }}
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.py }}-${{ matrix.platform.wheel_tag }}
          path: ./wheelhouse/*.whl

  build_docs:
    name: Build docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
        with:
          python-version: '3.12'
      - run: |
          pip install -e .[docs]
          cd docs && make html coverage

  upload_pypi:
    name: Upload wheels to PyPI
    needs: [lint, build_docs, build_sdist, build_wheels]
    environment:
      name: pypi
      url: https://pypi.org/p/pypcode
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    # Upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          path: artifacts
      - run: |
          mkdir dist
          find artifacts -type f -exec mv {} dist \;
      - uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
